@model KHCN.Data.Entities.System.CMS_Page

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title"><i class="fa fa-users"></i> Thông tin trang</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    @using (Html.BeginForm("AddOrUpdate", "QT_Pages", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })<b class="text-red control-label">&nbsp;*</b> @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Key, htmlAttributes: new { @class = "control-label" }) <b class="text-red control-label">&nbsp;*</b> @Html.ValidationMessageFor(model => model.Key, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.Key, new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IdParent, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.IdParent, "", new { @class = "text-danger" })
                                    @Html.DropDownListFor(model => model.IdParent, ViewBag.DDLPARENT as SelectList, "--- Lựa chọn ---", new { @class = "form-control select2 select2bs4", @width = "100%" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IdModule, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.IdModule, "", new { @class = "text-danger" })
                                    @Html.DropDownListFor(model => model.IdModule, ViewBag.DDLMODULE as SelectList, "--- Lựa chọn ---", new { @class = "form-control select2 select2bs4", @width = "100%" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.Icon, new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrderHint, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.OrderHint, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.OrderHint, new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                                    <br />
                                    @Html.CheckBoxFor(model => model.IsAdmin, new { htmlAttributes = new { @class = "form-control" } })
                                </div>

                                @{
                                    if (Model != null && Model.Id > 0)
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                            <br />
                                            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    }
                                }

                                <div class="form-group">
                                    <button type="submit" class="btn btn-sm btn-success"><i class="fa fa-save"></i> Lưu lại</button>
                                    <a class="btn btn-sm btn-outline-info" href="@Url.Content("~/admin/loai-san-pham/danh-sach")"><i class="fa fa-reply"></i> Quay lại</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
        function changeController() {
            var controllerName = $('select[name=Controller] option:selected').val();
            $.ajax
                ({
                    url: '@Url.Action("GetActionByController", "QT_Functions")',
                    type: 'POST',
                    data: { controllerName: controllerName },
                    success: function (result) {
                        if (result.status == true) {
                            $("#Action").empty();
                            $("#Action").append('<option value="">--- Lựa chọn ---</option>')
                            $.each($.parseJSON(result.data), function (i, item) {
                                $("#Action").append($('<option></option>').val(item).html(item))
                            })
                        }
                    },
                    error: function () {
                        alert("Error! Something went wrong..")
                    },
                });
        }
</script>
}